

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 29 21:44:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.32
    22                           ; Generated 02/02/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0088                     	;# 
   408  0089                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  008F                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  009F                     	;# 
   431  0105                     	;# 
   432  0107                     	;# 
   433  0108                     	;# 
   434  0109                     	;# 
   435  010C                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  0185                     	;# 
   441  0187                     	;# 
   442  0188                     	;# 
   443  0189                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446                           
   447                           	psect	idataBANK0
   448  05BF                     __pidataBANK0:
   449                           
   450                           ;initializer for _tabTeclado
   451  05BF  3431               	retlw	49
   452  05C0  3432               	retlw	50
   453  05C1  3433               	retlw	51
   454  05C2  3441               	retlw	65
   455  05C3  3434               	retlw	52
   456  05C4  3435               	retlw	53
   457  05C5  3436               	retlw	54
   458  05C6  3442               	retlw	66
   459  05C7  3437               	retlw	55
   460  05C8  3438               	retlw	56
   461  05C9  3439               	retlw	57
   462  05CA  3443               	retlw	67
   463  05CB  342A               	retlw	42
   464  05CC  3430               	retlw	48
   465  05CD  3423               	retlw	35
   466  05CE  3444               	retlw	68
   467                           
   468                           ;initializer for _passos
   469  05CF  3402               	retlw	2
   470  05D0  3406               	retlw	6
   471  05D1  3404               	retlw	4
   472  05D2  3405               	retlw	5
   473  05D3  3401               	retlw	1
   474  05D4  3409               	retlw	9
   475  05D5  3408               	retlw	8
   476  05D6  340A               	retlw	10
   477                           
   478                           ;initializer for _tabela
   479  05D7  3402               	retlw	2
   480  05D8  3404               	retlw	4
   481  05D9  3401               	retlw	1
   482  05DA  3408               	retlw	8
   483                           
   484                           	psect	nvBANK0
   485  005B                     __pnvBANK0:
   486  005B                     _ppr:
   487  005B                     	ds	2
   488  0008                     _PORTD	set	8
   489  0008                     _PORTDbits	set	8
   490  0088                     _TRISDbits	set	136
   491                           
   492                           	psect	cinit
   493  07EF                     start_initialization:	
   494                           ; #config settings
   495                           
   496  07EF                     __initialization:
   497                           
   498                           ; Initialize objects allocated to BANK0
   499  07EF  1383               	bcf	3,7	;select IRP bank0
   500  07F0  305B               	movlw	low (__pdataBANK0+28)
   501  07F1  00FD               	movwf	btemp+-1
   502  07F2  3005               	movlw	high __pidataBANK0
   503  07F3  00FE               	movwf	btemp
   504  07F4  30BF               	movlw	low __pidataBANK0
   505  07F5  00FF               	movwf	btemp+1
   506  07F6  303F               	movlw	low __pdataBANK0
   507  07F7  0084               	movwf	4
   508  07F8  120A  118A  25A0   	fcall	init_ram0
   509                           
   510                           ; Clear objects allocated to BANK0
   511  07FB  01DD               	clrf	__pbssBANK0& (0+127)
   512  07FC                     end_of_initialization:	
   513                           ;End of C runtime variable initialization code
   514                           
   515  07FC                     __end_of__initialization:
   516  07FC  0183               	clrf	3
   517  07FD  120A  118A  2E1A   	ljmp	_main	;jump to C main() function
   518                           
   519                           	psect	bssBANK0
   520  005D                     __pbssBANK0:
   521  005D                     _indice:
   522  005D                     	ds	1
   523                           
   524                           	psect	dataBANK0
   525  003F                     __pdataBANK0:
   526  003F                     _tabTeclado:
   527  003F                     	ds	16
   528  004F                     _passos:
   529  004F                     	ds	8
   530  0057                     _tabela:
   531  0057                     	ds	4
   532                           
   533                           	psect	inittext
   534  059C                     init_fetch0:	
   535                           ;	Called with low address in FSR and high address in W
   536                           
   537  059C  087E               	movf	126,w
   538  059D  008A               	movwf	10
   539  059E  087F               	movf	127,w
   540  059F  0082               	movwf	2
   541  05A0                     init_ram0:	
   542                           ;Called with:
   543                           ;	high address of idata address in btemp 
   544                           ;	low address of idata address in btemp+1 
   545                           ;	low address of data in FSR
   546                           ;	high address + 1 of data in btemp-1
   547                           
   548  05A0  259C  120A  118A   	fcall	init_fetch0
   549  05A3  0080               	movwf	0
   550  05A4  0A84               	incf	4,f
   551  05A5  0804               	movf	4,w
   552  05A6  067D               	xorwf	125,w
   553  05A7  1903               	btfsc	3,2
   554  05A8  3400               	retlw	0
   555  05A9  0AFF               	incf	127,f
   556  05AA  1903               	btfsc	3,2
   557  05AB  0AFE               	incf	126,f
   558  05AC  2DA0               	goto	init_ram0
   559                           
   560                           	psect	cstackCOMMON
   561  0070                     __pcstackCOMMON:
   562  0070                     ?_motordePasso_klv_init:
   563  0070                     ?_delay:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_main:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?___lmul:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     delay@t:	
   573                           ; 4 bytes @ 0x0
   574                           
   575  0070                     motordePasso_klv_init@pulsosPorRevolucao:	
   576                           ; 2 bytes @ 0x0
   577                           
   578  0070                     ___lmul@multiplier:	
   579                           ; 2 bytes @ 0x0
   580                           
   581                           
   582                           ; 4 bytes @ 0x0
   583  0070                     	ds	2
   584  0072                     ??_motordePasso_klv_init:
   585  0072                     ??_delay:	
   586                           ; 1 bytes @ 0x2
   587                           
   588                           
   589                           ; 1 bytes @ 0x2
   590  0072                     	ds	2
   591  0074                     ___lmul@multiplicand:
   592                           
   593                           ; 4 bytes @ 0x4
   594  0074                     	ds	4
   595  0078                     ??___lmul:
   596                           
   597                           ; 1 bytes @ 0x8
   598  0078                     	ds	1
   599  0079                     ___lmul@product:
   600                           
   601                           ; 4 bytes @ 0x9
   602  0079                     	ds	4
   603  007D                     ??___aldiv:
   604                           
   605                           ; 1 bytes @ 0xD
   606  007D                     	ds	1
   607  007E                     ??_main:
   608                           
   609                           	psect	cstackBANK0
   610  0020                     __pcstackBANK0:	
   611                           ; 1 bytes @ 0xE
   612                           
   613  0020                     ?___aldiv:
   614  0020                     ___aldiv@divisor:	
   615                           ; 4 bytes @ 0x0
   616                           
   617                           
   618                           ; 4 bytes @ 0x0
   619  0020                     	ds	4
   620  0024                     ___aldiv@dividend:
   621                           
   622                           ; 4 bytes @ 0x4
   623  0024                     	ds	4
   624  0028                     ___aldiv@counter:
   625                           
   626                           ; 1 bytes @ 0x8
   627  0028                     	ds	1
   628  0029                     ___aldiv@sign:
   629                           
   630                           ; 1 bytes @ 0x9
   631  0029                     	ds	1
   632  002A                     ___aldiv@quotient:
   633                           
   634                           ; 4 bytes @ 0xA
   635  002A                     	ds	4
   636  002E                     ?_motordePassoKLV:
   637  002E                     motordePassoKLV@sentido:	
   638                           ; 1 bytes @ 0xE
   639                           
   640                           
   641                           ; 1 bytes @ 0xE
   642  002E                     	ds	1
   643  002F                     motordePassoKLV@graus:
   644                           
   645                           ; 4 bytes @ 0xF
   646  002F                     	ds	4
   647  0033                     motordePassoKLV@t:
   648                           
   649                           ; 2 bytes @ 0x13
   650  0033                     	ds	2
   651  0035                     ??_motordePassoKLV:
   652                           
   653                           ; 1 bytes @ 0x15
   654  0035                     	ds	1
   655  0036                     motordePassoKLV@numPassos:
   656                           
   657                           ; 2 bytes @ 0x16
   658  0036                     	ds	2
   659  0038                     motordePassoKLV@numPassos_124:
   660                           
   661                           ; 2 bytes @ 0x18
   662  0038                     	ds	2
   663  003A                     motordePassoKLV@passo:
   664                           
   665                           ; 1 bytes @ 0x1A
   666  003A                     	ds	1
   667  003B                     motordePassoKLV@x:
   668                           
   669                           ; 2 bytes @ 0x1B
   670  003B                     	ds	2
   671  003D                     motordePassoKLV@x_123:
   672                           
   673                           ; 2 bytes @ 0x1D
   674  003D                     	ds	2
   675                           
   676                           	psect	maintext
   677  061A                     __pmaintext:	
   678 ;;
   679 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   680 ;;
   681 ;; *************** function _main *****************
   682 ;; Defined at:
   683 ;;		line 14 in file "main.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;		None
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : B00/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         0       0       0       0       0
   698 ;;      Locals:         0       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0
   700 ;;      Totals:         0       0       0       0       0
   701 ;;Total ram usage:        0 bytes
   702 ;; Hardware stack levels required when called: 2
   703 ;; This function calls:
   704 ;;		_delay
   705 ;;		_motordePassoKLV
   706 ;;		_motordePasso_klv_init
   707 ;; This function is called by:
   708 ;;		Startup code after reset
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           
   713                           ;psect for function _main
   714  061A                     _main:
   715                           
   716                           ;main.c: 16: motordePasso_klv_init ( 8 );
   717                           
   718                           ;incstack = 0
   719                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   720  061A  3008               	movlw	8
   721  061B  00F0               	movwf	motordePasso_klv_init@pulsosPorRevolucao
   722  061C  3000               	movlw	0
   723  061D  00F1               	movwf	motordePasso_klv_init@pulsosPorRevolucao+1
   724  061E  120A  118A  258D  120A  118A  	fcall	_motordePasso_klv_init
   725  0623                     L1:
   726                           
   727                           ;main.c: 17: delay(3000);
   728  0623  30B8               	movlw	184
   729  0624  00F0               	movwf	delay@t
   730  0625  300B               	movlw	11
   731  0626  00F1               	movwf	delay@t+1
   732  0627  120A  118A  25AD  120A  118A  	fcall	_delay
   733                           
   734                           ;main.c: 20: {;main.c: 21: motordePassoKLV( 1, 1, 90, 1000 );
   735  062C  1283               	bcf	3,5	;RP0=0, select bank0
   736  062D  1303               	bcf	3,6	;RP1=0, select bank0
   737  062E  01AE               	clrf	motordePassoKLV@sentido
   738  062F  0AAE               	incf	motordePassoKLV@sentido,f
   739  0630  3000               	movlw	0
   740  0631  00B2               	movwf	motordePassoKLV@graus+3
   741  0632  3000               	movlw	0
   742  0633  00B1               	movwf	motordePassoKLV@graus+2
   743  0634  3000               	movlw	0
   744  0635  00B0               	movwf	motordePassoKLV@graus+1
   745  0636  305A               	movlw	90
   746  0637  00AF               	movwf	motordePassoKLV@graus
   747  0638  30E8               	movlw	232
   748  0639  00B3               	movwf	motordePassoKLV@t
   749  063A  3003               	movlw	3
   750  063B  00B4               	movwf	motordePassoKLV@t+1
   751  063C  3001               	movlw	1
   752  063D  120A  118A  272D  120A  118A  	fcall	_motordePassoKLV
   753                           
   754                           ;main.c: 22: delay(3000);
   755  0642  30B8               	movlw	184
   756  0643  00F0               	movwf	delay@t
   757  0644  300B               	movlw	11
   758  0645  00F1               	movwf	delay@t+1
   759  0646  120A  118A  25AD  120A  118A  	fcall	_delay
   760                           
   761                           ;main.c: 23: motordePassoKLV( 1, 1, 90, 1000 );
   762  064B  1283               	bcf	3,5	;RP0=0, select bank0
   763  064C  1303               	bcf	3,6	;RP1=0, select bank0
   764  064D  01AE               	clrf	motordePassoKLV@sentido
   765  064E  0AAE               	incf	motordePassoKLV@sentido,f
   766  064F  3000               	movlw	0
   767  0650  00B2               	movwf	motordePassoKLV@graus+3
   768  0651  3000               	movlw	0
   769  0652  00B1               	movwf	motordePassoKLV@graus+2
   770  0653  3000               	movlw	0
   771  0654  00B0               	movwf	motordePassoKLV@graus+1
   772  0655  305A               	movlw	90
   773  0656  00AF               	movwf	motordePassoKLV@graus
   774  0657  30E8               	movlw	232
   775  0658  00B3               	movwf	motordePassoKLV@t
   776  0659  3003               	movlw	3
   777  065A  00B4               	movwf	motordePassoKLV@t+1
   778  065B  3001               	movlw	1
   779  065C  120A  118A  272D  120A  118A  	fcall	_motordePassoKLV
   780                           
   781                           ;main.c: 24: delay(3000);
   782  0661  30B8               	movlw	184
   783  0662  00F0               	movwf	delay@t
   784  0663  300B               	movlw	11
   785  0664  00F1               	movwf	delay@t+1
   786  0665  120A  118A  25AD  120A  118A  	fcall	_delay
   787                           
   788                           ;main.c: 25: motordePassoKLV( 0, 1, 90, 1000 );
   789  066A  1283               	bcf	3,5	;RP0=0, select bank0
   790  066B  1303               	bcf	3,6	;RP1=0, select bank0
   791  066C  01AE               	clrf	motordePassoKLV@sentido
   792  066D  0AAE               	incf	motordePassoKLV@sentido,f
   793  066E  3000               	movlw	0
   794  066F  00B2               	movwf	motordePassoKLV@graus+3
   795  0670  3000               	movlw	0
   796  0671  00B1               	movwf	motordePassoKLV@graus+2
   797  0672  3000               	movlw	0
   798  0673  00B0               	movwf	motordePassoKLV@graus+1
   799  0674  305A               	movlw	90
   800  0675  00AF               	movwf	motordePassoKLV@graus
   801  0676  30E8               	movlw	232
   802  0677  00B3               	movwf	motordePassoKLV@t
   803  0678  3003               	movlw	3
   804  0679  00B4               	movwf	motordePassoKLV@t+1
   805  067A  3000               	movlw	0
   806  067B  120A  118A  272D  120A  118A  	fcall	_motordePassoKLV
   807                           
   808                           ;main.c: 26: delay(3000);
   809  0680  30B8               	movlw	184
   810  0681  00F0               	movwf	delay@t
   811  0682  300B               	movlw	11
   812  0683  00F1               	movwf	delay@t+1
   813  0684  120A  118A  25AD  120A  118A  	fcall	_delay
   814                           
   815                           ;main.c: 27: motordePassoKLV( 0, 1, 90, 1000 );
   816  0689  1283               	bcf	3,5	;RP0=0, select bank0
   817  068A  1303               	bcf	3,6	;RP1=0, select bank0
   818  068B  01AE               	clrf	motordePassoKLV@sentido
   819  068C  0AAE               	incf	motordePassoKLV@sentido,f
   820  068D  3000               	movlw	0
   821  068E  00B2               	movwf	motordePassoKLV@graus+3
   822  068F  3000               	movlw	0
   823  0690  00B1               	movwf	motordePassoKLV@graus+2
   824  0691  3000               	movlw	0
   825  0692  00B0               	movwf	motordePassoKLV@graus+1
   826  0693  305A               	movlw	90
   827  0694  00AF               	movwf	motordePassoKLV@graus
   828  0695  30E8               	movlw	232
   829  0696  00B3               	movwf	motordePassoKLV@t
   830  0697  3003               	movlw	3
   831  0698  00B4               	movwf	motordePassoKLV@t+1
   832  0699  3000               	movlw	0
   833  069A  120A  118A  272D  120A  118A  	fcall	_motordePassoKLV
   834  069F  2E23               	goto	L1
   835  06A0                     __end_of_main:	
   836                           ;main.c: 28: delay(3000);
   837                           
   838                           
   839                           	psect	text1
   840  058D                     __ptext1:	
   841 ;; *************** function _motordePasso_klv_init *****************
   842 ;; Defined at:
   843 ;;		line 19 in file "motordePassoKLV.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  pulsosPorRev    2    0[COMMON] int 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg
   852 ;; Tracked objects:
   853 ;;		On entry : B00/0
   854 ;;		On exit  : B00/0
   855 ;;		Unchanged: 800/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   857 ;;      Params:         2       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0
   860 ;;      Totals:         2       0       0       0       0
   861 ;;Total ram usage:        2 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           
   871                           ;psect for function _motordePasso_klv_init
   872  058D                     _motordePasso_klv_init:
   873                           
   874                           ;motordePassoKLV.c: 21: TRISDbits.TRISD0 = 0;
   875                           
   876                           ;incstack = 0
   877                           ; Regs used in _motordePasso_klv_init: [wreg]
   878  058D  1683               	bsf	3,5	;RP0=1, select bank1
   879  058E  1008               	bcf	8,0	;volatile
   880                           
   881                           ;motordePassoKLV.c: 22: TRISDbits.TRISD1 = 0;
   882  058F  1088               	bcf	8,1	;volatile
   883                           
   884                           ;motordePassoKLV.c: 23: TRISDbits.TRISD2 = 0;
   885  0590  1108               	bcf	8,2	;volatile
   886                           
   887                           ;motordePassoKLV.c: 24: TRISDbits.TRISD3 = 0;
   888  0591  1188               	bcf	8,3	;volatile
   889                           
   890                           ;motordePassoKLV.c: 26: PORTDbits.RD0 = 0;
   891  0592  1283               	bcf	3,5	;RP0=0, select bank0
   892  0593  1008               	bcf	8,0	;volatile
   893                           
   894                           ;motordePassoKLV.c: 27: PORTDbits.RD1 = 0;
   895  0594  1088               	bcf	8,1	;volatile
   896                           
   897                           ;motordePassoKLV.c: 28: PORTDbits.RD2 = 0;
   898  0595  1108               	bcf	8,2	;volatile
   899                           
   900                           ;motordePassoKLV.c: 29: PORTDbits.RD3 = 0;
   901  0596  1188               	bcf	8,3	;volatile
   902                           
   903                           ;motordePassoKLV.c: 31: ppr = pulsosPorRevolucao;
   904  0597  0871               	movf	motordePasso_klv_init@pulsosPorRevolucao+1,w
   905  0598  00DC               	movwf	_ppr+1
   906  0599  0870               	movf	motordePasso_klv_init@pulsosPorRevolucao,w
   907  059A  00DB               	movwf	_ppr
   908  059B  0008               	return
   909  059C                     __end_of_motordePasso_klv_init:
   910                           
   911                           	psect	text2
   912  072D                     __ptext2:	
   913 ;; *************** function _motordePassoKLV *****************
   914 ;; Defined at:
   915 ;;		line 34 in file "motordePassoKLV.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  passo           1    wreg     unsigned char 
   918 ;;  sentido         1   14[BANK0 ] unsigned char 
   919 ;;  graus           4   15[BANK0 ] long 
   920 ;;  t               2   19[BANK0 ] int 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  passo           1   26[BANK0 ] unsigned char 
   923 ;;  x               2   29[BANK0 ] int 
   924 ;;  numPassos       2   24[BANK0 ] int 
   925 ;;  x               2   27[BANK0 ] int 
   926 ;;  numPassos       2   22[BANK0 ] int 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 300/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   936 ;;      Params:         0       7       0       0       0
   937 ;;      Locals:         0       9       0       0       0
   938 ;;      Temps:          0       1       0       0       0
   939 ;;      Totals:         0      17       0       0       0
   940 ;;Total ram usage:       17 bytes
   941 ;; Hardware stack levels used: 1
   942 ;; Hardware stack levels required when called: 1
   943 ;; This function calls:
   944 ;;		___aldiv
   945 ;;		___lmul
   946 ;;		_delay
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           
   953                           ;psect for function _motordePassoKLV
   954  072D                     _motordePassoKLV:
   955                           
   956                           ;incstack = 0
   957                           ; Regs used in _motordePassoKLV: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   958                           ;motordePassoKLV@passo stored from wreg
   959  072D  00BA               	movwf	motordePassoKLV@passo
   960                           
   961                           ;motordePassoKLV.c: 36: if ( passo == 1 )
   962  072E  033A               	decf	motordePassoKLV@passo,w
   963  072F  1D03               	btfss	3,2
   964  0730  2F90               	goto	l851
   965                           
   966                           ;motordePassoKLV.c: 37: {;motordePassoKLV.c: 38: int x;;motordePassoKLV.c: 39: int numPa
      +                          ssos;;motordePassoKLV.c: 40: numPassos = ( graus * ppr)/180;
   967  0731  3000               	movlw	0
   968  0732  00A3               	movwf	___aldiv@divisor+3
   969  0733  3000               	movlw	0
   970  0734  00A2               	movwf	___aldiv@divisor+2
   971  0735  3000               	movlw	0
   972  0736  00A1               	movwf	___aldiv@divisor+1
   973  0737  30B4               	movlw	180
   974  0738  00A0               	movwf	___aldiv@divisor
   975  0739  085B               	movf	_ppr,w
   976  073A  00F0               	movwf	___lmul@multiplier
   977  073B  085C               	movf	_ppr+1,w
   978  073C  00F1               	movwf	___lmul@multiplier+1
   979  073D  3000               	movlw	0
   980  073E  1BF1               	btfsc	___lmul@multiplier+1,7
   981  073F  30FF               	movlw	255
   982  0740  00F2               	movwf	___lmul@multiplier+2
   983  0741  00F3               	movwf	___lmul@multiplier+3
   984  0742  0832               	movf	motordePassoKLV@graus+3,w
   985  0743  00F7               	movwf	___lmul@multiplicand+3
   986  0744  0831               	movf	motordePassoKLV@graus+2,w
   987  0745  00F6               	movwf	___lmul@multiplicand+2
   988  0746  0830               	movf	motordePassoKLV@graus+1,w
   989  0747  00F5               	movwf	___lmul@multiplicand+1
   990  0748  082F               	movf	motordePassoKLV@graus,w
   991  0749  00F4               	movwf	___lmul@multiplicand
   992  074A  120A  118A  25DB  120A  118A  	fcall	___lmul
   993  074F  0873               	movf	?___lmul+3,w
   994  0750  00A7               	movwf	___aldiv@dividend+3
   995  0751  0872               	movf	?___lmul+2,w
   996  0752  00A6               	movwf	___aldiv@dividend+2
   997  0753  0871               	movf	?___lmul+1,w
   998  0754  00A5               	movwf	___aldiv@dividend+1
   999  0755  0870               	movf	?___lmul,w
  1000  0756  00A4               	movwf	___aldiv@dividend
  1001  0757  120A  118A  26A0  120A  118A  	fcall	___aldiv
  1002  075C  0821               	movf	?___aldiv+1,w
  1003  075D  00B7               	movwf	motordePassoKLV@numPassos+1
  1004  075E  0820               	movf	?___aldiv,w
  1005  075F  00B6               	movwf	motordePassoKLV@numPassos
  1006                           
  1007                           ;motordePassoKLV.c: 42: for (x=0; x<numPassos; x++ )
  1008  0760  01BB               	clrf	motordePassoKLV@x
  1009  0761  01BC               	clrf	motordePassoKLV@x+1
  1010  0762                     l849:
  1011  0762  083C               	movf	motordePassoKLV@x+1,w
  1012  0763  3A80               	xorlw	128
  1013  0764  00B5               	movwf	??_motordePassoKLV
  1014  0765  0837               	movf	motordePassoKLV@numPassos+1,w
  1015  0766  3A80               	xorlw	128
  1016  0767  0235               	subwf	??_motordePassoKLV,w
  1017  0768  1D03               	skipz
  1018  0769  2F6C               	goto	u375
  1019  076A  0836               	movf	motordePassoKLV@numPassos,w
  1020  076B  023B               	subwf	motordePassoKLV@x,w
  1021  076C                     u375:
  1022  076C  1803               	btfsc	3,0
  1023  076D  0008               	return
  1024                           
  1025                           ;motordePassoKLV.c: 43: {;motordePassoKLV.c: 44: PORTD = ((PORTD & 0xF0)| passos [indice
      +                          ]);
  1026  076E  1283               	bcf	3,5	;RP0=0, select bank0
  1027  076F  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0770  085D               	movf	_indice,w
  1029  0771  3E4F               	addlw	(low (_passos| 0))& (0+255)
  1030  0772  0084               	movwf	4
  1031  0773  0808               	movf	8,w	;volatile
  1032  0774  39F0               	andlw	240
  1033  0775  1383               	bcf	3,7	;select IRP bank0
  1034  0776  0400               	iorwf	0,w
  1035  0777  0088               	movwf	8	;volatile
  1036                           
  1037                           ;motordePassoKLV.c: 45: delay(t);
  1038  0778  0834               	movf	motordePassoKLV@t+1,w
  1039  0779  00F1               	movwf	delay@t+1
  1040  077A  0833               	movf	motordePassoKLV@t,w
  1041  077B  00F0               	movwf	delay@t
  1042  077C  120A  118A  25AD  120A  118A  	fcall	_delay
  1043                           
  1044                           ;motordePassoKLV.c: 46: indice = ( indice + sentido) % 8;
  1045  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1046  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1047  0783  082E               	movf	motordePassoKLV@sentido,w
  1048  0784  075D               	addwf	_indice,w
  1049  0785  3907               	andlw	7
  1050  0786  00B5               	movwf	??_motordePassoKLV
  1051  0787  0835               	movf	??_motordePassoKLV,w
  1052  0788  00DD               	movwf	_indice
  1053  0789  3001               	movlw	1
  1054  078A  07BB               	addwf	motordePassoKLV@x,f
  1055  078B  1803               	skipnc
  1056  078C  0ABC               	incf	motordePassoKLV@x+1,f
  1057  078D  3000               	movlw	0
  1058  078E  07BC               	addwf	motordePassoKLV@x+1,f
  1059  078F  2F62               	goto	l849
  1060  0790                     l851:
  1061                           
  1062                           ;motordePassoKLV.c: 49: else;motordePassoKLV.c: 50: {;motordePassoKLV.c: 51: int x;;moto
      +                          rdePassoKLV.c: 52: int numPassos;;motordePassoKLV.c: 53: numPassos = ( graus * ppr)/360;
  1063  0790  3000               	movlw	0
  1064  0791  00A3               	movwf	___aldiv@divisor+3
  1065  0792  3000               	movlw	0
  1066  0793  00A2               	movwf	___aldiv@divisor+2
  1067  0794  3001               	movlw	1
  1068  0795  00A1               	movwf	___aldiv@divisor+1
  1069  0796  3068               	movlw	104
  1070  0797  00A0               	movwf	___aldiv@divisor
  1071  0798  085B               	movf	_ppr,w
  1072  0799  00F0               	movwf	___lmul@multiplier
  1073  079A  085C               	movf	_ppr+1,w
  1074  079B  00F1               	movwf	___lmul@multiplier+1
  1075  079C  3000               	movlw	0
  1076  079D  1BF1               	btfsc	___lmul@multiplier+1,7
  1077  079E  30FF               	movlw	255
  1078  079F  00F2               	movwf	___lmul@multiplier+2
  1079  07A0  00F3               	movwf	___lmul@multiplier+3
  1080  07A1  0832               	movf	motordePassoKLV@graus+3,w
  1081  07A2  00F7               	movwf	___lmul@multiplicand+3
  1082  07A3  0831               	movf	motordePassoKLV@graus+2,w
  1083  07A4  00F6               	movwf	___lmul@multiplicand+2
  1084  07A5  0830               	movf	motordePassoKLV@graus+1,w
  1085  07A6  00F5               	movwf	___lmul@multiplicand+1
  1086  07A7  082F               	movf	motordePassoKLV@graus,w
  1087  07A8  00F4               	movwf	___lmul@multiplicand
  1088  07A9  120A  118A  25DB  120A  118A  	fcall	___lmul
  1089  07AE  0873               	movf	?___lmul+3,w
  1090  07AF  00A7               	movwf	___aldiv@dividend+3
  1091  07B0  0872               	movf	?___lmul+2,w
  1092  07B1  00A6               	movwf	___aldiv@dividend+2
  1093  07B2  0871               	movf	?___lmul+1,w
  1094  07B3  00A5               	movwf	___aldiv@dividend+1
  1095  07B4  0870               	movf	?___lmul,w
  1096  07B5  00A4               	movwf	___aldiv@dividend
  1097  07B6  120A  118A  26A0  120A  118A  	fcall	___aldiv
  1098  07BB  0821               	movf	?___aldiv+1,w
  1099  07BC  00B9               	movwf	motordePassoKLV@numPassos_124+1
  1100  07BD  0820               	movf	?___aldiv,w
  1101  07BE  00B8               	movwf	motordePassoKLV@numPassos_124
  1102                           
  1103                           ;motordePassoKLV.c: 55: for (x=0; x<numPassos; x++ )
  1104  07BF  01BD               	clrf	motordePassoKLV@x_123
  1105  07C0  01BE               	clrf	motordePassoKLV@x_123+1
  1106  07C1                     l863:
  1107  07C1  083E               	movf	motordePassoKLV@x_123+1,w
  1108  07C2  3A80               	xorlw	128
  1109  07C3  00B5               	movwf	??_motordePassoKLV
  1110  07C4  0839               	movf	motordePassoKLV@numPassos_124+1,w
  1111  07C5  3A80               	xorlw	128
  1112  07C6  0235               	subwf	??_motordePassoKLV,w
  1113  07C7  1D03               	skipz
  1114  07C8  2FCB               	goto	u385
  1115  07C9  0838               	movf	motordePassoKLV@numPassos_124,w
  1116  07CA  023D               	subwf	motordePassoKLV@x_123,w
  1117  07CB                     u385:
  1118  07CB  1803               	btfsc	3,0
  1119  07CC  0008               	return
  1120                           
  1121                           ;motordePassoKLV.c: 56: {;motordePassoKLV.c: 57: PORTD = ((PORTD & 0xF0)| tabela [indice
      +                          ]);
  1122  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1123  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1124  07CF  085D               	movf	_indice,w
  1125  07D0  3E57               	addlw	(low (_tabela| 0))& (0+255)
  1126  07D1  0084               	movwf	4
  1127  07D2  0808               	movf	8,w	;volatile
  1128  07D3  39F0               	andlw	240
  1129  07D4  1383               	bcf	3,7	;select IRP bank0
  1130  07D5  0400               	iorwf	0,w
  1131  07D6  0088               	movwf	8	;volatile
  1132                           
  1133                           ;motordePassoKLV.c: 58: delay(t);
  1134  07D7  0834               	movf	motordePassoKLV@t+1,w
  1135  07D8  00F1               	movwf	delay@t+1
  1136  07D9  0833               	movf	motordePassoKLV@t,w
  1137  07DA  00F0               	movwf	delay@t
  1138  07DB  120A  118A  25AD  120A  118A  	fcall	_delay
  1139                           
  1140                           ;motordePassoKLV.c: 59: indice = ( indice + sentido) % 4;
  1141  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  1142  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  1143  07E2  082E               	movf	motordePassoKLV@sentido,w
  1144  07E3  075D               	addwf	_indice,w
  1145  07E4  3903               	andlw	3
  1146  07E5  00B5               	movwf	??_motordePassoKLV
  1147  07E6  0835               	movf	??_motordePassoKLV,w
  1148  07E7  00DD               	movwf	_indice
  1149  07E8  3001               	movlw	1
  1150  07E9  07BD               	addwf	motordePassoKLV@x_123,f
  1151  07EA  1803               	skipnc
  1152  07EB  0ABE               	incf	motordePassoKLV@x_123+1,f
  1153  07EC  3000               	movlw	0
  1154  07ED  07BE               	addwf	motordePassoKLV@x_123+1,f
  1155  07EE  2FC1               	goto	l863
  1156  07EF                     __end_of_motordePassoKLV:
  1157                           
  1158                           	psect	text3
  1159  05AD                     __ptext3:	
  1160 ;; *************** function _delay *****************
  1161 ;; Defined at:
  1162 ;;		line 12 in file "../motorPasso.X/delay.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;  t               2    0[COMMON] unsigned int 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1176 ;;      Params:         2       0       0       0       0
  1177 ;;      Locals:         0       0       0       0       0
  1178 ;;      Temps:          1       0       0       0       0
  1179 ;;      Totals:         3       0       0       0       0
  1180 ;;Total ram usage:        3 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;;		_motordePassoKLV
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           
  1191                           ;psect for function _delay
  1192  05AD                     _delay:
  1193  05AD                     l775:	
  1194                           ;delay.c: 14: while( t )
  1195                           
  1196                           ;incstack = 0
  1197                           ; Regs used in _delay: [wreg+status,2+status,0]
  1198                           
  1199  05AD  0870               	movf	delay@t,w
  1200  05AE  0471               	iorwf	delay@t+1,w
  1201  05AF  1903               	btfsc	3,2
  1202  05B0  0008               	return
  1203                           
  1204                           ;delay.c: 15: {;delay.c: 16: _delay((unsigned long)((1)*(4000000/4000.0)));
  1205  05B1  30C7               	movlw	199
  1206  05B2  00F2               	movwf	??_delay
  1207  05B3                     u397:
  1208  05B3  2DB4               	nop2
  1209  05B4  0BF2               	decfsz	??_delay,f
  1210  05B5  2DB3               	goto	u397
  1211  05B6  2DB7               	nop2
  1212  05B7  2DB8               	nop2
  1213                           
  1214                           ;delay.c: 17: --t;
  1215  05B8  3001               	movlw	1
  1216  05B9  02F0               	subwf	delay@t,f
  1217  05BA  3000               	movlw	0
  1218  05BB  1C03               	skipc
  1219  05BC  03F1               	decf	delay@t+1,f
  1220  05BD  02F1               	subwf	delay@t+1,f
  1221  05BE  2DAD               	goto	l775
  1222  05BF                     __end_of_delay:
  1223                           
  1224                           	psect	text4
  1225  05DB                     __ptext4:	
  1226 ;; *************** function ___lmul *****************
  1227 ;; Defined at:
  1228 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  multiplier      4    0[COMMON] unsigned long 
  1231 ;;  multiplicand    4    4[COMMON] unsigned long 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  product         4    9[COMMON] unsigned long 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  4    0[COMMON] unsigned long 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0
  1238 ;; Tracked objects:
  1239 ;;		On entry : 300/0
  1240 ;;		On exit  : 300/0
  1241 ;;		Unchanged: 300/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1243 ;;      Params:         8       0       0       0       0
  1244 ;;      Locals:         4       0       0       0       0
  1245 ;;      Temps:          1       0       0       0       0
  1246 ;;      Totals:        13       0       0       0       0
  1247 ;;Total ram usage:       13 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_motordePassoKLV
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           
  1257                           ;psect for function ___lmul
  1258  05DB                     ___lmul:
  1259                           
  1260                           ;incstack = 0
  1261                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1262  05DB  3000               	movlw	0
  1263  05DC  00FC               	movwf	___lmul@product+3
  1264  05DD  3000               	movlw	0
  1265  05DE  00FB               	movwf	___lmul@product+2
  1266  05DF  3000               	movlw	0
  1267  05E0  00FA               	movwf	___lmul@product+1
  1268  05E1  3000               	movlw	0
  1269  05E2  00F9               	movwf	___lmul@product
  1270  05E3                     l779:
  1271  05E3  1C70               	btfss	___lmul@multiplier,0
  1272  05E4  2DF9               	goto	l783
  1273  05E5  0874               	movf	___lmul@multiplicand,w
  1274  05E6  07F9               	addwf	___lmul@product,f
  1275  05E7  0875               	movf	___lmul@multiplicand+1,w
  1276  05E8  1103               	clrz
  1277  05E9  1803               	skipnc
  1278  05EA  3E01               	addlw	1
  1279  05EB  1D03               	btfss	3,2
  1280  05EC  07FA               	addwf	___lmul@product+1,f
  1281  05ED  0876               	movf	___lmul@multiplicand+2,w
  1282  05EE  1103               	clrz
  1283  05EF  1803               	skipnc
  1284  05F0  3E01               	addlw	1
  1285  05F1  1D03               	btfss	3,2
  1286  05F2  07FB               	addwf	___lmul@product+2,f
  1287  05F3  0877               	movf	___lmul@multiplicand+3,w
  1288  05F4  1103               	clrz
  1289  05F5  1803               	skipnc
  1290  05F6  3E01               	addlw	1
  1291  05F7  1D03               	btfss	3,2
  1292  05F8  07FC               	addwf	___lmul@product+3,f
  1293  05F9                     l783:
  1294  05F9  3001               	movlw	1
  1295  05FA  00F8               	movwf	??___lmul
  1296  05FB                     u235:
  1297  05FB  1003               	clrc
  1298  05FC  0DF4               	rlf	___lmul@multiplicand,f
  1299  05FD  0DF5               	rlf	___lmul@multiplicand+1,f
  1300  05FE  0DF6               	rlf	___lmul@multiplicand+2,f
  1301  05FF  0DF7               	rlf	___lmul@multiplicand+3,f
  1302  0600  0BF8               	decfsz	??___lmul,f
  1303  0601  2DFB               	goto	u235
  1304  0602  3001               	movlw	1
  1305  0603                     u245:
  1306  0603  1003               	clrc
  1307  0604  0CF3               	rrf	___lmul@multiplier+3,f
  1308  0605  0CF2               	rrf	___lmul@multiplier+2,f
  1309  0606  0CF1               	rrf	___lmul@multiplier+1,f
  1310  0607  0CF0               	rrf	___lmul@multiplier,f
  1311  0608  3EFF               	addlw	-1
  1312  0609  1D03               	skipz
  1313  060A  2E03               	goto	u245
  1314  060B  0873               	movf	___lmul@multiplier+3,w
  1315  060C  0472               	iorwf	___lmul@multiplier+2,w
  1316  060D  0471               	iorwf	___lmul@multiplier+1,w
  1317  060E  0470               	iorwf	___lmul@multiplier,w
  1318  060F  1D03               	skipz
  1319  0610  2DE3               	goto	l779
  1320  0611  087C               	movf	___lmul@product+3,w
  1321  0612  00F3               	movwf	?___lmul+3
  1322  0613  087B               	movf	___lmul@product+2,w
  1323  0614  00F2               	movwf	?___lmul+2
  1324  0615  087A               	movf	___lmul@product+1,w
  1325  0616  00F1               	movwf	?___lmul+1
  1326  0617  0879               	movf	___lmul@product,w
  1327  0618  00F0               	movwf	?___lmul
  1328  0619  0008               	return
  1329  061A                     __end_of___lmul:
  1330                           
  1331                           	psect	text5
  1332  06A0                     __ptext5:	
  1333 ;; *************** function ___aldiv *****************
  1334 ;; Defined at:
  1335 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  divisor         4    0[BANK0 ] long 
  1338 ;;  dividend        4    4[BANK0 ] long 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  quotient        4   10[BANK0 ] long 
  1341 ;;  sign            1    9[BANK0 ] unsigned char 
  1342 ;;  counter         1    8[BANK0 ] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  4    0[BANK0 ] long 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0
  1347 ;; Tracked objects:
  1348 ;;		On entry : 300/0
  1349 ;;		On exit  : 300/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       8       0       0       0
  1353 ;;      Locals:         0       6       0       0       0
  1354 ;;      Temps:          1       0       0       0       0
  1355 ;;      Totals:         1      14       0       0       0
  1356 ;;Total ram usage:       15 bytes
  1357 ;; Hardware stack levels used: 1
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_motordePassoKLV
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           
  1366                           ;psect for function ___aldiv
  1367  06A0                     ___aldiv:
  1368                           
  1369                           ;incstack = 0
  1370                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1371  06A0  01A9               	clrf	___aldiv@sign
  1372  06A1  1FA3               	btfss	___aldiv@divisor+3,7
  1373  06A2  2EB0               	goto	l222
  1374  06A3  09A0               	comf	___aldiv@divisor,f
  1375  06A4  09A1               	comf	___aldiv@divisor+1,f
  1376  06A5  09A2               	comf	___aldiv@divisor+2,f
  1377  06A6  09A3               	comf	___aldiv@divisor+3,f
  1378  06A7  0AA0               	incf	___aldiv@divisor,f
  1379  06A8  1903               	skipnz
  1380  06A9  0AA1               	incf	___aldiv@divisor+1,f
  1381  06AA  1903               	skipnz
  1382  06AB  0AA2               	incf	___aldiv@divisor+2,f
  1383  06AC  1903               	skipnz
  1384  06AD  0AA3               	incf	___aldiv@divisor+3,f
  1385  06AE  01A9               	clrf	___aldiv@sign
  1386  06AF  0AA9               	incf	___aldiv@sign,f
  1387  06B0                     l222:
  1388  06B0  1FA7               	btfss	___aldiv@dividend+3,7
  1389  06B1  2EC1               	goto	l801
  1390  06B2  09A4               	comf	___aldiv@dividend,f
  1391  06B3  09A5               	comf	___aldiv@dividend+1,f
  1392  06B4  09A6               	comf	___aldiv@dividend+2,f
  1393  06B5  09A7               	comf	___aldiv@dividend+3,f
  1394  06B6  0AA4               	incf	___aldiv@dividend,f
  1395  06B7  1903               	skipnz
  1396  06B8  0AA5               	incf	___aldiv@dividend+1,f
  1397  06B9  1903               	skipnz
  1398  06BA  0AA6               	incf	___aldiv@dividend+2,f
  1399  06BB  1903               	skipnz
  1400  06BC  0AA7               	incf	___aldiv@dividend+3,f
  1401  06BD  3001               	movlw	1
  1402  06BE  00FD               	movwf	??___aldiv
  1403  06BF  087D               	movf	??___aldiv,w
  1404  06C0  06A9               	xorwf	___aldiv@sign,f
  1405  06C1                     l801:
  1406  06C1  3000               	movlw	0
  1407  06C2  00AD               	movwf	___aldiv@quotient+3
  1408  06C3  3000               	movlw	0
  1409  06C4  00AC               	movwf	___aldiv@quotient+2
  1410  06C5  3000               	movlw	0
  1411  06C6  00AB               	movwf	___aldiv@quotient+1
  1412  06C7  3000               	movlw	0
  1413  06C8  00AA               	movwf	___aldiv@quotient
  1414  06C9  0823               	movf	___aldiv@divisor+3,w
  1415  06CA  0422               	iorwf	___aldiv@divisor+2,w
  1416  06CB  0421               	iorwf	___aldiv@divisor+1,w
  1417  06CC  0420               	iorwf	___aldiv@divisor,w
  1418  06CD  1903               	skipnz
  1419  06CE  2F16               	goto	l823
  1420  06CF  01A8               	clrf	___aldiv@counter
  1421  06D0  0AA8               	incf	___aldiv@counter,f
  1422  06D1                     l809:
  1423  06D1  1BA3               	btfsc	___aldiv@divisor+3,7
  1424  06D2  2EE1               	goto	l811
  1425  06D3  3001               	movlw	1
  1426  06D4  00FD               	movwf	??___aldiv
  1427  06D5                     u295:
  1428  06D5  1003               	clrc
  1429  06D6  0DA0               	rlf	___aldiv@divisor,f
  1430  06D7  0DA1               	rlf	___aldiv@divisor+1,f
  1431  06D8  0DA2               	rlf	___aldiv@divisor+2,f
  1432  06D9  0DA3               	rlf	___aldiv@divisor+3,f
  1433  06DA  0BFD               	decfsz	??___aldiv,f
  1434  06DB  2ED5               	goto	u295
  1435  06DC  3001               	movlw	1
  1436  06DD  00FD               	movwf	??___aldiv
  1437  06DE  087D               	movf	??___aldiv,w
  1438  06DF  07A8               	addwf	___aldiv@counter,f
  1439  06E0  2ED1               	goto	l809
  1440  06E1                     l811:
  1441  06E1  3001               	movlw	1
  1442  06E2  00FD               	movwf	??___aldiv
  1443  06E3                     u315:
  1444  06E3  1003               	clrc
  1445  06E4  0DAA               	rlf	___aldiv@quotient,f
  1446  06E5  0DAB               	rlf	___aldiv@quotient+1,f
  1447  06E6  0DAC               	rlf	___aldiv@quotient+2,f
  1448  06E7  0DAD               	rlf	___aldiv@quotient+3,f
  1449  06E8  0BFD               	decfsz	??___aldiv,f
  1450  06E9  2EE3               	goto	u315
  1451  06EA  0823               	movf	___aldiv@divisor+3,w
  1452  06EB  0227               	subwf	___aldiv@dividend+3,w
  1453  06EC  1D03               	skipz
  1454  06ED  2EF8               	goto	u325
  1455  06EE  0822               	movf	___aldiv@divisor+2,w
  1456  06EF  0226               	subwf	___aldiv@dividend+2,w
  1457  06F0  1D03               	skipz
  1458  06F1  2EF8               	goto	u325
  1459  06F2  0821               	movf	___aldiv@divisor+1,w
  1460  06F3  0225               	subwf	___aldiv@dividend+1,w
  1461  06F4  1D03               	skipz
  1462  06F5  2EF8               	goto	u325
  1463  06F6  0820               	movf	___aldiv@divisor,w
  1464  06F7  0224               	subwf	___aldiv@dividend,w
  1465  06F8                     u325:
  1466  06F8  1C03               	skipc
  1467  06F9  2F09               	goto	l819
  1468  06FA  0820               	movf	___aldiv@divisor,w
  1469  06FB  02A4               	subwf	___aldiv@dividend,f
  1470  06FC  0821               	movf	___aldiv@divisor+1,w
  1471  06FD  1C03               	skipc
  1472  06FE  0F21               	incfsz	___aldiv@divisor+1,w
  1473  06FF  02A5               	subwf	___aldiv@dividend+1,f
  1474  0700  0822               	movf	___aldiv@divisor+2,w
  1475  0701  1C03               	skipc
  1476  0702  0F22               	incfsz	___aldiv@divisor+2,w
  1477  0703  02A6               	subwf	___aldiv@dividend+2,f
  1478  0704  0823               	movf	___aldiv@divisor+3,w
  1479  0705  1C03               	skipc
  1480  0706  0F23               	incfsz	___aldiv@divisor+3,w
  1481  0707  02A7               	subwf	___aldiv@dividend+3,f
  1482  0708  142A               	bsf	___aldiv@quotient,0
  1483  0709                     l819:
  1484  0709  3001               	movlw	1
  1485  070A                     u335:
  1486  070A  1003               	clrc
  1487  070B  0CA3               	rrf	___aldiv@divisor+3,f
  1488  070C  0CA2               	rrf	___aldiv@divisor+2,f
  1489  070D  0CA1               	rrf	___aldiv@divisor+1,f
  1490  070E  0CA0               	rrf	___aldiv@divisor,f
  1491  070F  3EFF               	addlw	-1
  1492  0710  1D03               	skipz
  1493  0711  2F0A               	goto	u335
  1494  0712  3001               	movlw	1
  1495  0713  02A8               	subwf	___aldiv@counter,f
  1496  0714  1D03               	btfss	3,2
  1497  0715  2EE1               	goto	l811
  1498  0716                     l823:
  1499  0716  0829               	movf	___aldiv@sign,w
  1500  0717  1903               	btfsc	3,2
  1501  0718  2F24               	goto	l827
  1502  0719  09AA               	comf	___aldiv@quotient,f
  1503  071A  09AB               	comf	___aldiv@quotient+1,f
  1504  071B  09AC               	comf	___aldiv@quotient+2,f
  1505  071C  09AD               	comf	___aldiv@quotient+3,f
  1506  071D  0AAA               	incf	___aldiv@quotient,f
  1507  071E  1903               	skipnz
  1508  071F  0AAB               	incf	___aldiv@quotient+1,f
  1509  0720  1903               	skipnz
  1510  0721  0AAC               	incf	___aldiv@quotient+2,f
  1511  0722  1903               	skipnz
  1512  0723  0AAD               	incf	___aldiv@quotient+3,f
  1513  0724                     l827:
  1514  0724  082D               	movf	___aldiv@quotient+3,w
  1515  0725  00A3               	movwf	?___aldiv+3
  1516  0726  082C               	movf	___aldiv@quotient+2,w
  1517  0727  00A2               	movwf	?___aldiv+2
  1518  0728  082B               	movf	___aldiv@quotient+1,w
  1519  0729  00A1               	movwf	?___aldiv+1
  1520  072A  082A               	movf	___aldiv@quotient,w
  1521  072B  00A0               	movwf	?___aldiv
  1522  072C  0008               	return
  1523  072D                     __end_of___aldiv:
  1524  007E                     btemp	set	126	;btemp
  1525  007E                     wtemp0	set	126
  1526                           
  1527                           	psect	config
  1528                           
  1529                           ;Config register CONFIG1 @ 0x2007
  1530                           ;	Oscillator Selection bits
  1531                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1532                           ;	Watchdog Timer Enable bit
  1533                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1534                           ;	Power-up Timer Enable bit
  1535                           ;	PWRTE = OFF, PWRT disabled
  1536                           ;	RE3/MCLR pin function select bit
  1537                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1538                           ;	Code Protection bit
  1539                           ;	CP = OFF, Program memory code protection is disabled
  1540                           ;	Data Code Protection bit
  1541                           ;	CPD = OFF, Data memory code protection is disabled
  1542                           ;	Brown Out Reset Selection bits
  1543                           ;	BOREN = OFF, BOR disabled
  1544                           ;	Internal External Switchover bit
  1545                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1546                           ;	Fail-Safe Clock Monitor Enabled bit
  1547                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1548                           ;	Low Voltage Programming Enable bit
  1549                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1550                           ;	In-Circuit Debugger Mode bit
  1551                           ;	DEBUG = 0x1, unprogrammed default
  1552  2007                     	org	8199
  1553  2007  20D4               	dw	8404
  1554                           
  1555                           ;Config register CONFIG2 @ 0x2008
  1556                           ;	Brown-out Reset Selection bit
  1557                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1558                           ;	Flash Program Memory Self Write Enable bits
  1559                           ;	WRT = OFF, Write protection off
  1560  2008                     	org	8200
  1561  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        28
    BSS         1
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      62
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _motordePassoKLV->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _main->_motordePassoKLV
    _motordePassoKLV->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3368
                              _delay
                    _motordePassoKLV
              _motordePasso_klv_init
 ---------------------------------------------------------------------------------
 (1) _motordePasso_klv_init                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motordePassoKLV                                     17    10      7    2715
                                             14 BANK0     17    10      7
                            ___aldiv
                             ___lmul
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     555
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     396
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _motordePassoKLV
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _delay
   _motordePasso_klv_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1F      3E       5       77.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4C      12        0.0%
ABS                  0      0      4C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 29 21:44:39 2021

                                      pc 0002                                       fsr 0004  
                                    l222 06B0                                      l801 06C1  
                                    l811 06E1                                      l823 0716  
                                    l809 06D1                                      l827 0724  
                                    l819 0709                                      l851 0790  
                                    l783 05F9                                      l775 05AD  
                                    l863 07C1                                      l849 0762  
                                    l779 05E3                                      u315 06E3  
                                    u235 05FB                                      u325 06F8  
                                    u245 0603                                      u335 070A  
                                    u295 06D5                                      u375 076C  
                                    u385 07CB                                      u397 05B3  
                                    _ppr 005B                                      fsr0 0004  
                                    indf 0000                         motordePassoKLV@t 0033  
                       motordePassoKLV@x 003B                                     _main 061A  
                                   btemp 007E                                     start 0000  
                        __end_of___aldiv 072D                                    ?_main 0070  
                                  _PORTD 0008                      ___lmul@multiplicand 0074  
                  _motordePasso_klv_init 058D                                    _delay 05AD  
                                  pclath 000A                                    status 0003  
                                  wtemp0 007E                          __initialization 07EF  
                           __end_of_main 06A0                                   ??_main 007E  
                                 ?_delay 0070                                   ___lmul 05DB  
                              ??___aldiv 007D                                   _indice 005D  
                                 _tabela 0057                                   delay@t 0070  
                                 _passos 004F                          _motordePassoKLV 072D  
                 ?_motordePasso_klv_init 0070                  __end_of__initialization 07FC  
                         __pcstackCOMMON 0070                             __pidataBANK0 05BF  
                          __end_of_delay 05BF                                  ??_delay 0072  
                             __pbssBANK0 005D                               __pmaintext 061A  
                __end_of_motordePassoKLV 07EF                                  ?___lmul 0070  
                         ___lmul@product 0079                               _tabTeclado 003F  
                                ___aldiv 06A0                          __size_of___lmul 003F  
                                __ptext1 058D                                  __ptext2 072D  
                                __ptext3 05AD                                  __ptext4 05DB  
                                __ptext5 06A0                         ___aldiv@dividend 0024  
                   end_of_initialization 07FC                     motordePassoKLV@x_123 003D  
                       ?_motordePassoKLV 002E                         ___aldiv@quotient 002A  
                   motordePassoKLV@graus 002F                     motordePassoKLV@passo 003A  
                ??_motordePasso_klv_init 0072                                _PORTDbits 0008  
                              _TRISDbits 0088                           __end_of___lmul 061A  
                    start_initialization 07EF                 motordePassoKLV@numPassos 0036  
                               ??___lmul 0078                               init_fetch0 059C  
                            __pdataBANK0 003F                                ___latbits 0002  
                          __pcstackBANK0 0020                                __pnvBANK0 005B  
                               ?___aldiv 0020                           __size_of_delay 0012  
                        ___aldiv@divisor 0020                          ___aldiv@counter 0028  
         __size_of_motordePasso_klv_init 000F            __end_of_motordePasso_klv_init 059C  
motordePasso_klv_init@pulsosPorRevolucao 0070                        ___lmul@multiplier 0070  
                       __size_of___aldiv 008D                 __size_of_motordePassoKLV 00C2  
                          __size_of_main 0086                   motordePassoKLV@sentido 002E  
                               init_ram0 05A0                             ___aldiv@sign 0029  
                      ??_motordePassoKLV 0035             motordePassoKLV@numPassos_124 0038  
